using CommandLine;
using RCPA.Commandline;
using System.IO;

namespace CQS.Genome.Bed
{
  public class BedSorterOptions : AbstractOptions
  {
    public BedSorterOptions()
    { }

    [Option('i', "input", Required = true, MetaValue = "FILE", HelpText = "Input bed file")]
    public string InputFile { get; set; }

    [Option('d', "dictFile", Required = true, MetaValue = "FILE", HelpText = "Genome dict file generated by picard")]
    public string DictFile { get; set; }

    [Option('o', "output", Required = true, MetaValue = "FILE", HelpText = "Output file")]
    public string OutputFile { get; set; }

    //[Option('v', "vcf", Required = false, MetaValue = "BOOLEAN", HelpText = "Output as vcf format")]
    //public bool VcfFormat { get; set; }

    public override bool PrepareOptions()
    {
      if (!"-".Equals(this.InputFile) && !File.Exists(this.InputFile))
      {
        ParsingErrors.Add(string.Format("Input file not exists {0}.", this.InputFile));
      }

      if (!File.Exists(this.DictFile))
      {
        ParsingErrors.Add(string.Format("Geome dict file not exists {0}.", this.DictFile));
      }

      return ParsingErrors.Count == 0;
    }
  }
}
